<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="Furniture_Scrollbar">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<centerright>60</centerright>
			<posy>PosterPad</posy>
			<height>PosterH</height>
			<width>8</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="Dark3">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="Dark2">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>
	<include name="Furniture_Scrollbar_Horizontal">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<left>SidePad</left>
			<width>1760</width>
			<bottom>200</bottom>
			<orientation>horizontal</orientation>
			<height>8</height>
			<onup>50</onup>
			<ondown condition="!Skin.HasSetting(global.kioskmode)">9000</ondown>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="Dark3">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="Dark2">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>
	<include name="Furniture_ButtonBack">
		<width>64</width>
		<height>64</height>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="75" end="100" center="auto" time="200" />
		</animation>
	</include>
	<include name="Furniture_ButtonBack_Circle">
		<width>64</width>
		<height>64</height>
		<texture colordiffuse="Dark1">common/circle.png</texture>
	</include>
	<!-- Flags -->
	<variable name="Flagstar1">
		<value condition="IntegerGreaterThan(ListItem.Rating,1)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar2">
		<value condition="IntegerGreaterThan(ListItem.Rating,3)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar3">
		<value condition="IntegerGreaterThan(ListItem.Rating,5)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar4">
		<value condition="IntegerGreaterThan(ListItem.Rating,7)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar5">
		<value condition="IntegerGreaterThan(ListItem.Rating,9)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar1">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,1)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar2">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,3)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar3">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,5)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar4">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,7)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar5">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,9)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<!-- MusicFlags -->
	<variable name="MusicFlagstar5">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar4">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar3">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar2">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating2.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar1">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating2.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating1.png)">star10</value>
		<value>star0</value>
	</variable>
	<!-- MusicOSDFlags -->
	<variable name="OSDMusicFlagstar5">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar4">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar3">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar2">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating2.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar1">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating2.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating1.png)">star10</value>
		<value>star0</value>
	</variable>
	<include name="Furniture_Flags">
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>SidePad</left>
			<centerbottom>NavBarPad</centerbottom>
			<width>1400</width>
			<height>120</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>24</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="group">
				<centertop>50%</centertop>
				<width>64</width>
				<height>64</height>
				<control type="image" description="button back">
					<width>64</width>
					<height>64</height>
					<texture border="32" colordiffuse="Dark1">common/circle.png</texture>
				</control>
				<control type="label">
					<width>64</width>
					<height>64</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$VAR[HDSD]</label>
					<font>SmallBold</font>
					<textcolor>Light1</textcolor>
					<visible>!substring(ListItem.Path,videodb://movies/sets,left)</visible>
				</control>
				<control type="image">
					<width>64</width>
					<height>64</height>
					<texture colordiffuse="Light1">flags/sets.png</texture>
					<visible>substring(ListItem.Path,videodb://movies/sets,left)</visible>
				</control>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar1].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar2].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar3].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar4].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar5].png</texture>
			</control>
			<control type="image">
				<width>48</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/airing.png</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width min="128">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$VAR[LabelNextAiredDetails]</label>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<control type="image">
				<width>48</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/video.png</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(ListItem.VideoCodec)</visible>
			</control>
			<control type="label">
				<width min="128">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.VideoCodec,, • ]$INFO[ListItem.VideoResolution]</label>
				<font>Flag</font>
				<textcolor>Dark1</textcolor>
				<visible>!IsEmpty(ListItem.VideoCodec)</visible>
			</control>
			<control type="image">
				<width>48</width>
				<centertop>50%</centertop>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/audio.png</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(ListItem.AudioCodec)</visible>
			</control>
			<control type="label">
				<width min="128">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.AudioCodec]$VAR[LabelAudioChannels, • ,]</label>
				<font>Flag</font>
				<textcolor>Dark1</textcolor>
				<visible>!IsEmpty(ListItem.AudioCodec)</visible>
			</control>
			<control type="image">
				<width>64</width>
				<centertop>50%</centertop>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/3D.png</texture>
				<visible>ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<width>64</width>
				<centertop>50%</centertop>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/bluray.png</texture>
				<visible>[substring(ListItem.FilenameAndPath,bluray) | substring(ListItem.FilenameAndPath,bdrip) | substring(ListItem.FilenameAndPath,bd25) | substring(ListItem.FilenameAndPath,bd50)]</visible>
			</control>
			<control type="image">
				<width>95</width>
				<centertop>50%</centertop>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/hddvd.png</texture>
				<visible>substring(ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="image">
				<width>64</width>
				<centertop>50%</centertop>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/dvd.png</texture>
				<visible>substring(ListItem.FilenameAndPath,dvd) + !substring(ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="image">
				<width>64</width>
				<centertop>50%</centertop>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/imdb.png</texture>
				<visible>!IsEmpty(ListItem.Top250)</visible>
			</control>
		</control>
	</include>
	<include name="Furniture_Hub_Flags">
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>SidePad</left>
			<centerbottom>NavBarPad</centerbottom>
			<width>1400</width>
			<height>64</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>24</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="group">
				<width>64</width>
				<height>64</height>
				<control type="image" description="button back">
					<width>64</width>
					<height>64</height>
					<texture border="32" colordiffuse="Dark1">common/circle.png</texture>
				</control>
				<control type="label">
					<width>64</width>
					<height>64</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$VAR[HDSD]</label>
					<font>SmallBold</font>
					<textcolor>Light1</textcolor>
					<visible>!substring(Container(9500).ListItem.Path,videodb://movies/sets,left)</visible>
				</control>
				<control type="image">
					<width>64</width>
					<height>64</height>
					<texture colordiffuse="Light1">flags/sets.png</texture>
					<visible>substring(Container(9500).ListItem.Path,videodb://movies/sets,left)</visible>
				</control>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/$VAR[HubFlagstar1].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/$VAR[HubFlagstar2].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/$VAR[HubFlagstar3].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/$VAR[HubFlagstar4].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/$VAR[HubFlagstar5].png</texture>
			</control>
			<control type="image">
				<width>48</width>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/video.png</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(Container(9500).ListItem.VideoCodec)</visible>
			</control>
			<control type="label">
				<width min="128">auto</width>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[Container(9500).ListItem.VideoCodec,, • ]$INFO[Container(9500).ListItem.VideoResolution]</label>
				<font>Flag</font>
				<textcolor>Dark1</textcolor>
				<visible>!IsEmpty(Container(9500).ListItem.VideoCodec)</visible>
			</control>
			<control type="image">
				<width>48</width>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/audio.png</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!IsEmpty(Container(9500).ListItem.AudioCodec)</visible>
			</control>
			<control type="label">
				<width min="128">auto</width>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[Container(9500).ListItem.AudioCodec]$VAR[LabelHubAudioChannels, • ,]</label>
				<font>Flag</font>
				<textcolor>Dark1</textcolor>
				<visible>!IsEmpty(Container(9500).ListItem.AudioCodec)</visible>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/3D.png</texture>
				<visible>Container(9500).ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/bluray.png</texture>
				<visible>[substring(Container(9500).ListItem.FilenameAndPath,bluray) | substring(Container(9500).ListItem.FilenameAndPath,bdrip) | substring(Container(9500).ListItem.FilenameAndPath,bd25) | substring(Container(9500).ListItem.FilenameAndPath,bd50)]</visible>
			</control>
			<control type="image">
				<width>95</width>
				<centertop>50%</centertop>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/hddvd.png</texture>
				<visible>substring(Container(9500).ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="image">
				<width>64</width>
				<centertop>50%</centertop>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/dvd.png</texture>
				<visible>substring(Container(9500).ListItem.FilenameAndPath,dvd) + !substring(Container(9500).ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="image">
				<width>64</width>
				<centertop>50%</centertop>
				<height>64</height>
				<texture colordiffuse="Dark1">flags/imdb.png</texture>
				<visible>!IsEmpty(Container(9500).ListItem.Top250)</visible>
			</control>
		</control>
	</include>
	<variable name="HeaderIcon">
		<value condition="Window.IsVisible(DialogMuteBug.xml)">special://skin/extras/icons/mute.png</value>
		<value condition="Window.IsVisible(DialogButtonMenu.xml)">special://skin/extras/icons/power.png</value>
		<value condition="Window.IsVisible(DialogFavourites.xml)">special://skin/extras/icons/favourites.png</value>
		<value condition="Player.HasAudio + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/songs.png</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(livetv) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/livetv.png</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(movies) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/film.png</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/tv.png</value>
		<value condition="Player.HasVideo + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/eye.png</value>
		<value condition="Window.IsVisible(3201)">special://skin/extras/icons/film.png</value>
		<value condition="Window.IsVisible(3202)">special://skin/extras/icons/tv.png</value>
		<value condition="Window.IsVisible(3204) | Window.IsVisible(3205) | Window.IsVisible(3203)">special://skin/extras/icons/director.png</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + substring(Container.FolderPath,videodb://movies) | substring(Container.FolderPath,videodb://recentlyaddedmovies)">special://skin/extras/icons/film.png</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + [substring(Container.FolderPath,videodb://tvshows) | substring(Container.FolderPath,videodb://recentlyaddedepisodes)]">special://skin/extras/icons/tv.png</value>
		<value condition="Window.IsVisible(MyVideoNav.xml)">special://skin/extras/icons/video-addons.png</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml)">special://skin/extras/icons/livetv.png</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">special://skin/extras/icons/songs.png</value>
		<value condition="Window.IsVisible(MyPics.xml)">special://skin/extras/icons/pictures.png</value>
		<value condition="Window.IsVisible(MyPrograms.xml) | Window.IsVisible(AddonBrowser.xml)">special://skin/extras/icons/addons.png</value>
		<value condition="Window.IsVisible(weather)">special://skin/extras/icons/sun.png</value>
		<value condition="Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">special://skin/extras/icons/settings.png</value>
		<value condition="Window.IsVisible(MyMusicPlaylist.xml)">special://skin/extras/icons/playlist.png</value>
		<value condition="Window.IsVisible(FileManager.xml)">special://skin/extras/icons/database.png</value>
		<value condition="Window.IsVisible(Home.xml)">special://skin/extras/icons/home.png</value>
		<value>special://skin/extras/icons/artist.png</value>
	</variable>
	<variable name="MainHeaderLabel">
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml)">$LOCALIZE[20011]</value>
		<value condition="Window.IsVisible(DialogButtonMenu.xml)">$LOCALIZE[33060]</value>
		<value condition="Window.IsVisible(DialogFavourites.xml)">$LOCALIZE[1036]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + substring(Container.FolderPath,videodb://movies) | substring(Container.FolderPath,videodb://recentlyaddedmovies)">$LOCALIZE[20342]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + [substring(Container.FolderPath,videodb://tvshows) | substring(Container.FolderPath,videodb://recentlyaddedepisodes)]">$LOCALIZE[20343]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml)">$LOCALIZE[3]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml)">$LOCALIZE[19019]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml)">$LOCALIZE[4]</value>
        <value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
        <value condition="Window.IsVisible(MyPVRTimers.xml)">$LOCALIZE[19040]</value>
        <value condition="Window.IsVisible(MyPVRSearch.xml)">$LOCALIZE[137]</value>
		<value condition="Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">$LOCALIZE[5]</value>
		<value condition="Window.IsVisible(weather)">$LOCALIZE[8]</value>
		<value condition="Window.IsVisible(MyPics.xml)">$LOCALIZE[1]</value>
		<value condition="Window.IsVisible(MyPrograms.xml)">$LOCALIZE[0]</value>
		<value condition="Window.IsVisible(AddonBrowser.xml)">$LOCALIZE[24001]</value>
		<value condition="Window.IsVisible(MyMusicPlaylist.xml)">$LOCALIZE[559]</value>
		<value condition="Window.IsVisible(FileManager.xml)">$LOCALIZE[744]</value>
		<value condition="Window.IsVisible(3203) + stringcompare(Window(3203).Property(content),1)">$INFO[Window(home).Property(ExtStudio),$LOCALIZE[31205] ,]</value>
		<value condition="Window.IsVisible(3203) + stringcompare(Window(3203).Property(content),2)">$INFO[Window(home).Property(ExtMovie),$LOCALIZE[31204] ,]</value>
		<value condition="Window.IsVisible(3203)">$INFO[Window(home).Property(ExtDirector),$LOCALIZE[31191] ,]</value>
		<value condition="Window.IsVisible(3204) + stringcompare(Window(3204).Property(content),1)">$LOCALIZE[31211]</value>
		<value condition="Window.IsVisible(3204) + stringcompare(Window(3204).Property(content),2)">$LOCALIZE[31210]</value>
		<value condition="Window.IsVisible(3204) + stringcompare(Window(3204).Property(content),3)">$LOCALIZE[31209]</value>
		<value condition="Window.IsVisible(3204)">$LOCALIZE[31208]</value>
		<value condition="Window.IsVisible(3205) + stringcompare(Window(3205).Property(content),1)">$LOCALIZE[31211]</value>
		<value condition="Window.IsVisible(3205) + stringcompare(Window(3205).Property(content),2)">$LOCALIZE[31210]</value>
		<value condition="Window.IsVisible(3205) + stringcompare(Window(3205).Property(content),3)">$LOCALIZE[31212]</value>
		<value condition="Window.IsVisible(3205)">$LOCALIZE[31213]</value>
		<value>$LOCALIZE[10000]</value>
	</variable>
	<variable name="SubHeaderLabel">
		<value condition="Window.IsVisible(LoginScreen.xml)">$LOCALIZE[10029]</value>
		<value condition="!IsEmpty(Container.NumItems) + !Window.IsVisible(home)">$INFO[Container.NumItems,[COLOR=Highlight],[/COLOR] $LOCALIZE[31101]]$INFO[Control.GetLabel(3), • ,]</value>
		<value condition="!IsEmpty(Container(9500).NumItems) + !Window.IsVisible(home)">$INFO[Container(9500).NumItems,[COLOR=Highlight],[/COLOR] $LOCALIZE[31101]]</value>
		<value condition="Window.IsVisible(MyWeather.xml) + !IsEmpty(Window(Weather).Property(Location))">$INFO[Weather.Temperature,[COLOR=Highlight],[/COLOR] ]$INFO[Window(Weather).Property(Location)]</value>
		<value>[COLOR=Highlight]$INFO[Window(Home).Property(MB3TotalMovies)][/COLOR] $LOCALIZE[20342] • [COLOR=Highlight]$INFO[Window(Home).Property(MB3TotalTvShows)][/COLOR] $LOCALIZE[20343] • [COLOR=Highlight]$INFO[Window(home).Property(Music.SongsCount)][/COLOR] $LOCALIZE[134]$INFO[Pvr.BackendChannels, • [COLOR=Highlight],[/COLOR] $LOCALIZE[19019]]</value>
	</variable>
	<include name="Furniture_Header">
		<control type="grouplist">
			<top>SidePad</top>
			<left>SidePad</left>
			<visible>!Skin.HasSetting(furniture.header)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<orientation>horizontal</orientation>
			<itemgap>24</itemgap>
			<control type="group" description="iconbox">
				<width>80</width>
				<height>80</height>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture colordiffuse="Panel" border="8">common/box.png</texture>
				</control>
				<control type="image">
					<top>-14</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="PanelWhite100" border="8">$VAR[HeaderIcon]</texture>
					<visible>!Container.Scrolling</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="label">
					<centertop>39</centertop>
					<centerleft>40</centerleft>
					<width>80</width>
					<height>80</height>
					<font>LargeBold</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.SortLetter]</label>
					<textcolor>PanelWhite100</textcolor>
					<visible>Container.Scrolling</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
			</control>
			<control type="group">
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<textcolor>Dark1</textcolor>
					<label>$VAR[MainHeaderLabel]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$VAR[SubHeaderLabel]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="Furniture_Clock">
		<control type="group">
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<centerbottom>NavBarPad</centerbottom>
			<visible>!Skin.HasSetting(furniture.clock)</visible>
			<height>84</height>
			<animation effect="slide" start="0" end="0,-10" time="150" condition="Skin.HasSetting(furniture.weather)">Conditional</animation>
			<control type="label">
				<centertop>24</centertop>
				<right>130</right>
				<align>right</align>
				<font>LargeBold</font>
				<textcolor>Dark1</textcolor>
				<label>$INFO[System.Time(hh:mm)]</label>
				<animation effect="slide" start="0" end="50" time="0" condition="IsEmpty(System.Time(xx))">Conditional</animation>
			</control>
			<control type="label">
				<centertop>30</centertop>
				<right>SidePad</right>
				<font>SmallBold</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>120</width>
				<label>$INFO[System.Time(xx)]</label>
				<visible>!IsEmpty(System.Time(xx))</visible>
			</control>
			<control type="label">
				<centertop>64</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<align>right</align>
				<width>50%</width>
				<label>$INFO[System.Date(DDD)]$COMMA $INFO[System.Date(d MMM yyyy)]</label>
			</control>
			<control type="label">
				<centertop>92</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>50%</width>
				<visible>Skin.HasSetting(furniture.weather)</visible>
				<label>$INFO[Weather.Temperature,[COLOR=Highlight],[/COLOR] ]$INFO[Weather.Conditions]</label>
			</control>
		</control>
	</include>
	<include name="Furniture_NowPlaying">
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.nowplaying)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<visible>IsEmpty(Window(10025).Property(TvTunesIsAlive))</visible>
			<visible>!Window.IsActive(DialogKaiToast.xml)</visible>
			<visible>Player.HasMedia</visible>
			<visible>!IsEmpty(Player.Duration) | Player.HasAudio</visible>
			<animation effect="slide" start="0" end="0,-250" time="150" condition="Control.HasFocus(301)">Conditional</animation>
			<top>70</top>
			<right>62</right>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<itemgap>24</itemgap>
			<align>right</align>
			<control type="group">
				<width>700</width>
				<posy>10</posy>
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<align>right</align>
					<textcolor>Dark1</textcolor>
					<label>$INFO[Player.Title]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<align>right</align>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$INFO[VideoPlayer.TvShowTitle,, ]$INFO[MusicPlayer.Artist,, ]$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				</control>
			</control>
			<control type="group">
				<posx>-20</posx>
				<height>100</height>
				<width>100</width>
				<control type="image" description="Back">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture>progress/back.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image" description="Play">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="Dark1">progress/play.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>!Player.Paused</visible>
				</control>
				<control type="image" description="Pause">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="Dark1">progress/pause.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>Player.Paused</visible>
				</control>
				<control type="progress" id="933">
					<texturebg>-</texturebg>
					<lefttexture>-</lefttexture>
					<midtexture>-</midtexture>
					<righttexture>-</righttexture>
					<info>Player.Progress</info>
					<visible>false</visible>
				</control>
				<control type="image">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<texture>$INFO[Control.GetLabel(933),progress/circle/p,.png]</texture>
					<aspectratio align="center">keep</aspectratio>
					<visible>!IsEmpty(Player.Duration)</visible>
				</control>
			</control>
		</control>
	</include>
</includes>